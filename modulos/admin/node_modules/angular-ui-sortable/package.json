{
  "name": "angular-ui-sortable",
  "version": "0.14.0",
  "description": "This directive allows you to jQueryUI Sortable.",
  "author": {
    "name": "https://github.com/angular-ui/ui-sortable/graphs/contributors"
  },
  "license": "MIT",
  "homepage": "http://angular-ui.github.com",
  "main": "./src/sortable.js",
  "dependencies": {},
  "devDependencies": {
    "angular-ui-publisher": "1.2.x",
    "grunt": "~0.4.x",
    "grunt-contrib-connect": "0.5.x",
    "grunt-contrib-jshint": "0.8.x",
    "grunt-contrib-uglify": "0.2.x",
    "grunt-contrib-watch": "0.5.x",
    "grunt-conventional-changelog": "~1.0.0",
    "grunt-karma": "^0.12.1",
    "grunt-ngmin": "0.0.x",
    "grunt-surround": "0.1.x",
    "jasmine-core": "^2.4.1",
    "karma": "^0.13.22",
    "karma-chrome-launcher": "0.1.x",
    "karma-coffee-preprocessor": "^0.3.0",
    "karma-coverage": "^0.5.5",
    "karma-coveralls": "~0.1.4",
    "karma-firefox-launcher": "0.1.x",
    "karma-html2js-preprocessor": "^0.1.0",
    "karma-jasmine": "^0.3.7",
    "karma-junit-reporter": "^0.4.0",
    "karma-phantomjs-launcher": "^1.0.0",
    "karma-requirejs": "^0.2.5",
    "karma-script-launcher": "^0.2.0",
    "load-grunt-tasks": "0.2.x",
    "requirejs": "2.1.x",
    "wiredep": "1.8.x"
  },
  "scripts": {},
  "repository": {
    "type": "git",
    "url": "git://github.com/angular-ui/ui-sortable.git"
  },
  "readme": "# UI.Sortable directive\n[![Build Status](https://travis-ci.org/angular-ui/ui-sortable.svg?branch=master)](https://travis-ci.org/angular-ui/ui-sortable)\n[![Coverage Status](https://coveralls.io/repos/angular-ui/ui-sortable/badge.svg?branch=master)](https://coveralls.io/r/angular-ui/ui-sortable?branch=master)\n[![debugInfoEnabled(false) Ready Badge](https://rawgit.com/thgreasi/ng-debugInfoDisabled-badges/master/badge1.svg)](https://docs.angularjs.org/guide/production#disabling-debug-data)\n[![Join the chat at https://gitter.im/angular-ui/ui-sortable](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/angular-ui/ui-sortable?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\nThis directive allows you to sort an array with drag & drop.\n\n## Requirements\n\n- JQuery\n- JQueryUI 1.9+\n- AngularJS v1.2+\n\n[Single minified cdn link](http://cdn.jsdelivr.net/g/jquery@1,jquery.ui@1.10%28jquery.ui.core.min.js+jquery.ui.widget.min.js+jquery.ui.mouse.min.js+jquery.ui.sortable.min.js%29,angularjs@1.2,angular.ui-sortable) ~245kB and [example](http://codepen.io/thgreasi/pen/olDJi) with JQuery v1.x, required parts of JQueryUI v1.10, AngularJS v1.2 & latest angular-ui-sortable.\n\n**Notes:**\n> * JQuery must be included before AngularJS.  \n> * JQueryUI dependecies include [core](http://api.jqueryui.com/category/ui-core/), [widget](http://api.jqueryui.com/jQuery.widget/), [mouse](http://api.jqueryui.com/mouse/) & [sortable](http://api.jqueryui.com/sortable/). Creating a [custom build](http://jqueryui.com/download/#!version=1.10&components=1110000010000000000000000000000000) will [greatly reduce](https://github.com/angular-ui/ui-sortable/issues/154#issuecomment-40279430) the required file size. ([CDN](http://www.jsdelivr.com/) links for comparison: [full](http://cdn.jsdelivr.net/g/jquery.ui@1.10) vs  [minimal](http://cdn.jsdelivr.net/g/jquery.ui@1.10%28jquery.ui.core.min.js+jquery.ui.widget.min.js+jquery.ui.mouse.min.js+jquery.ui.sortable.min.js%29))\n> * Users of AngularJS pre v1.2 can use [v0.10.x](https://github.com/angular-ui/ui-sortable/tree/v0.10.x-stable) or [v0.12.x](https://github.com/angular-ui/ui-sortable/tree/v0.12.x-stable) branches.\n> * Early adopters of [Angular2](https://angular.io/) can use the  [ng2 branch](https://github.com/angular-ui/ui-sortable/tree/ng2).\n\n## Installation\n\n* Install with Bower `bower install -S angular-ui-sortable`\n* Install with npm `npm install -S angular-ui-sortable`\n* Download one of the [Releases](https://github.com/angular-ui/ui-sortable/releases) or the [latest Master branch](https://github.com/angular-ui/ui-sortable/archive/master.zip)\n\n## Usage\n\nLoad the script file: sortable.js in your application:\n\n```html\n<script type=\"text/javascript\" src=\"modules/directives/sortable/src/sortable.js\"></script>\n```\n\nAdd the sortable module as a dependency to your application module:\n\n```js\nvar myAppModule = angular.module('MyApp', ['ui.sortable'])\n```\n\nApply the directive to your form elements:\n\n```html\n<ul ui-sortable ng-model=\"items\">\n  <li ng-repeat=\"item in items\">{{ item }}</li>\n</ul>\n```\n\n**Developing Notes:**\n\n* `ng-model` is required, so that the directive knows which model to update.\n* `ui-sortable` element should contain only one `ng-repeat`, but other non-repeater elements above or below may still exist.\n  Otherwise the index matching of the `ng-model`'s items and the DOM elements generated by the `ng-repeat` will break.  \n  **In other words: The items of `ng-model` must match the indexes of the DOM elements generated by the `ng-repeat`.**\n* [`Filters`](https://docs.angularjs.org/guide/filter) that manipulate the model (like [filter](https://docs.angularjs.org/api/ng/filter/filter), [orderBy](https://docs.angularjs.org/api/ng/filter/orderBy), [limitTo](https://docs.angularjs.org/api/ng/filter/limitTo),...) should be applied in the `controller` instead of the `ng-repeat` (refer to [the provided examples](#examples)).  \nThis is the preferred way since it:\n  - is performance wise better\n  - reduces the chance of code duplication\n  - [is suggested by the angularJS team](https://www.youtube.com/watch?feature=player_detailpage&v=ZhfUv0spHCY#t=3048)\n  - it does not break the matching of the generated DOM elements and the `ng-model`'s items\n* `ui-sortable` lists containing many 'types' of items can be implemented by using dynamic template loading [with ng-include](http://stackoverflow.com/questions/14607879/angularjs-load-dynamic-template-html-within-directive/14621927#14621927) or a [loader directive](https://github.com/thgreasi/tg-dynamic-directive), to determine how each model item should be rendered. Also take a look at the [Tree with dynamic template](http://codepen.io/thgreasi/pen/uyHFC) example.\n\n### Options\n\nAll the [jQueryUI Sortable options](http://api.jqueryui.com/sortable/) can be passed through the directive.  \nAdditionally, the `ui` argument of the available callbacks gets enriched with some extra properties as specified to the [API.md file](API.md#uiitemsortable-api-documentation).\nAny model changes that happen inside the available callbacks, are applied right after the stop event. We are not wrapping callbacks like `start`/`change`/... with `$apply`, in order to minimize the number of digest loops and avoid possible modifications of the model (eg: by watchers) before the drop takes place.\n\n```js\nmyAppModule.controller('MyController', function($scope) {\n  $scope.items = [\"One\", \"Two\", \"Three\"];\n\n  $scope.sortableOptions = {\n    update: function(e, ui) { ... },\n    axis: 'x'\n  };\n});\n```\n\n```html\n<ul ui-sortable=\"sortableOptions\" ng-model=\"items\">\n  <li ng-repeat=\"item in items\">{{ item }}</li>\n</ul>\n```\n\nWhen using event callbacks ([start](http://api.jqueryui.com/sortable/#event-start)/[update](http://api.jqueryui.com/sortable/#event-update)/[stop](http://api.jqueryui.com/sortable/#event-stop)...), avoid manipulating DOM elements (especially the one with the ng-repeat attached).\nThe suggested pattern is to use callbacks for emmiting events and altering the scope (inside the 'Angular world').\n\n#### Floating\n\nTo have a smooth horizontal-list reordering, jquery.ui.sortable needs to detect the orientation of the list.\nThis detection takes place during the initialization of the plugin (and some of the checks include: whether the first item is floating left/right or if 'axis' parameter is 'x', etc).\nThere is also a [known issue](bugs.jqueryui.com/ticket/7498) about initially empty horizontal lists.\n\nTo provide a solution/workaround (till jquery.ui.sortable.refresh() also tests the orientation or a more appropriate method is provided), ui-sortable directive provides a `ui-floating` option as an extra to the [jquery.ui.sortable options](http://api.jqueryui.com/sortable/).\n\n```html\n<ul ui-sortable=\"{ 'ui-floating': true }\" ng-model=\"items\">\n  <li ng-repeat=\"item in items\">{{ item }}</li>\n</ul>\n```\n\n**OR**\n\n```js\n$scope.sortableOptions = {\n  'ui-floating': true\n};\n```\n```html\n<ul ui-sortable=\"sortableOptions\" ng-model=\"items\">\n  <li ng-repeat=\"item in items\">{{ item }}</li>\n</ul>\n```\n\n\n**ui-floating** (default: undefined)  \nType: [Boolean](http://api.jquery.com/Types/#Boolean)/[String](http://api.jquery.com/Types/#String)/`undefined`\n*   **undefined**: Relies on jquery.ui to detect the list's orientation.\n*   **false**:     Forces jquery.ui.sortable to detect the list as vertical.\n*   **true**:      Forces jquery.ui.sortable to detect the list as horizontal.\n*   **\"auto\"**:    Detects on each drag `start` if the element is floating or not.\n\n#### Canceling\n\nInside the `update` callback, you can check the item that is dragged and cancel the sorting.\n\n```js\n$scope.sortableOptions = {\n  update: function(e, ui) {\n    if (ui.item.sortable.model == \"can't be moved\") {\n      ui.item.sortable.cancel();\n    }\n  }\n};\n```\n\n**Notes:**\n* `update` is the appropriate place to cancel a sorting, since it occurs before any model/scope changes but after the DOM position has been updated.\nSo `ui.item.scope` and the directive's `ng-model`, are equal to the scope before the drag start.\n* To [cancel a sorting between connected lists](https://github.com/angular-ui/ui-sortable/issues/107#issuecomment-33633638), `cancel` should be called inside the `update` callback of the originating list.\n\n### jQueryUI Sortable Event order\n\n**Single sortable** [demo](http://codepen.io/thgreasi/pen/KtsFH)\n```\nstart\nactivate\n\n/* multiple: sort/change/over/out */\n\nbeforeStop\nupdate    <= call cancel() here if needed\ndeactivate\nstop\n```\n\n**Connected sortables** [demo](http://codepen.io/thgreasi/pen/uIBKb)\n\n```\nlist A: start\nlist B: activate\nlist A: activate\n\n/* both lists multiple: sort/change/over/out */\nlist A: sort\nlist A: change\nlist B: change\nlist B: over\nlist A: sort\nlist B: out\nlist A: sort\n\nlist A: beforeStop\nlist A: update    <= call cancel() here if needed\nlist A: remove\nlist B: receive\nlist B: update\nlist B: deactivate\nlist A: deactivate\nlist A: stop\n```\n\nFor more details about the events check the [jQueryUI API documentation](http://api.jqueryui.com/sortable/).\n\n## Examples\n\n- [Simple Demo](http://codepen.io/thgreasi/pen/jlkhr)\n  - [Simple RequireJS Demo](http://codepen.io/thgreasi/pen/bNaxRq)\n  - [Simple Touch-Enabled Demo](http://codepen.io/thgreasi/pen/rOevyv) using [jQuery UI Touch Punch](https://github.com/furf/jquery-ui-touch-punch/)\n- [Connected Lists](http://codepen.io/thgreasi/pen/uFile)\n- [Filtering](http://codepen.io/thgreasi/pen/mzGbq) ([details](https://github.com/angular-ui/ui-sortable/issues/113))\n- [Ordering 1](http://codepen.io/thgreasi/pen/iKEHd) & [Ordering 2](http://plnkr.co/edit/XPUzJjdvwE0QWQ6py6mQ?p=preview) ([details](https://github.com/angular-ui/ui-sortable/issues/70))\n- [Cloning](http://codepen.io/thgreasi/pen/qmvhG) ([details](https://github.com/angular-ui/ui-sortable/issues/139))\n- [Horizontal List](http://codepen.io/thgreasi/pen/wsfjD)\n- [Tree with dynamic template](http://codepen.io/thgreasi/pen/uyHFC)\n- Canceling\n  - [Connected Lists With Max Size](http://codepen.io/thgreasi/pen/IdvFc)\n  - [Connected Lists Without Duplicates](http://codepen.io/thgreasi/pen/NPaJyb)\n  - [Promised Reverting](http://codepen.io/thgreasi/pen/MwQqdg)\n- [Locked Items](http://codepen.io/thgreasi/pen/GgdeEO)\n- [Draggable Handle](http://codepen.io/thgreasi/pen/ihAyr)\n- [Drop Zone](http://codepen.io/thgreasi/pen/LVXWeO)\n- [Draggable-Sortable like interaction](http://codepen.io/thgreasi/pen/LVVJgK)\n- [Static HTML Sorting](http://codepen.io/thgreasi/pen/qdmjwy)\n\n## Integrations\n- [ui.bootstrap.accordion](http://plnkr.co/edit/TGIeeEbbvJwpJ3WRqo2z?p=preview)\n- [Asynchronous loading jQuery+jQueryUI with crisbeto/angular-ui-sortable-loader](https://github.com/crisbeto/angular-ui-sortable-loader)\n\n## Reporting Issues\n\nThe [above](#examples) pen's are provided as a good starting point to demonstrate issues, proposals and use cases.\nFeel free to edit any of them for your needs (don't forget to also update the libraries used to your version).\n\n## Testing\n\nWe use Karma and jshint to ensure the quality of the code.  The easiest way to run these checks is to use grunt:\n\n```sh\nnpm install -g grunt-cli\nnpm install && bower install\ngrunt\n```\n\nThe karma task will try to open Firefox and Chrome as browser in which to run the tests.  Make sure this is available or change the configuration in `test\\karma.conf.js`\n\n\n### Grunt Serve\n\nWe have one task to serve them all !\n\n```sh\ngrunt serve\n```\n\nIt's equal to run separately:\n\n* `grunt connect:server` : giving you a development server at [http://127.0.0.1:8000/](http://127.0.0.1:8000/).\n\n* `grunt karma:server` : giving you a Karma server to run tests (at [http://localhost:9876/](http://localhost:9876/) by default). You can force a test on this server with `grunt karma:unit:run`.\n\n* `grunt watch` : will automatically test your code and build your demo.  You can demo generation with `grunt build:gh-pages`.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/angular-ui/ui-sortable/issues"
  },
  "_id": "angular-ui-sortable@0.14.0",
  "_from": "angular-ui-sortable@"
}
